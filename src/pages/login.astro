---
import Layout from "../layouts/Layout.astro";
import { ui } from "../i18n/ui.js";

const locale = (Astro.locals?.lang as "en" | "fr") ?? "en";

if ("user" in Astro.locals && Astro.locals.user) {
  // Si l'utilisateur est déjà connecté, on le redirige vers la page d'accueil
  return Astro.redirect("/");
}
---

<Layout title={ui[locale].login.title}>
  <div
    class="flex flex-col h-full items-center justify-center glass bg-primary"
  >
    <div class="card w-full max-w-md shadow-xl bg-base-100">
      <div class="card-body w-full">
        <h1 class="card-title text-3xl mb-4 justify-center">
          {ui[locale].login.title}
        </h1>
        <form id="login-form" class="flex flex-col gap-4 w-full">
          <input
            type="email"
            name="email"
            placeholder={ui[locale].login.email}
            required
            class="input input-bordered w-full"
          />
          <input
            type="password"
            name="password"
            placeholder={ui[locale].login.password}
            required
            class="input input-bordered w-full"
          />
          <button type="submit" class="btn btn-primary w-full">
            {ui[locale].login.loginButton}
          </button>
        </form>

        <!-- Zone d'affichage du statut -->
        <p id="status" class="mt-4 text-center text-error"></p>

        <!-- Lien vers la page d'inscription -->
        <div class="divider">{ui[locale].signup.or}</div>
        <button
          id="google-login"
          class="btn btn-outline w-full gap-2"
          type="button"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 48 48"
            width="20"
            height="20"
            ><path
              fill="#FFC107"
              d="M43.6 20.5H42V20H24v8h11.3C33.6 32.4 29.3 36 24 36c-6.6 0-12-5.4-12-12s5.4-12 12-12c3.1 0 5.9 1.2 8 3.1l5.7-5.7C34.6 6.1 29.6 4 24 4 12.9 4 4 12.9 4 24s8.9 20 20 20c10 0 18.3-7.3 19.8-16.8.1-.7.2-1.3.2-2 0-1.2-.1-2.3-.4-3.7z"
            ></path><path
              fill="#FF3D00"
              d="M6.3 14.7l6.6 4.8C14.5 16.7 18.9 14 24 14c3.1 0 5.9 1.2 8 3.1l5.7-5.7C34.6 6.1 29.6 4 24 4 16.3 4 9.6 8.3 6.3 14.7z"
            ></path><path
              fill="#4CAF50"
              d="M24 44c5.2 0 9.9-1.9 13.5-5.1l-6.2-5.2C29.2 35.5 26.8 36 24 36c-5.3 0-9.7-3.6-11.3-8.4l-6.4 4.9C9.6 39.7 16.3 44 24 44z"
            ></path><path
              fill="#1976D2"
              d="M43.6 20.5H42V20H24v8h11.3c-1 3-3.1 5.4-6 7.1l.1.1 6.2 5.2c-.4.3 6.4-4.7 6.4-14.4 0-1.2-.1-2.3-.4-3.7z"
            ></path></svg
          >
          Se connecter avec Google
        </button>
        <button
          id="github-login"
          class="btn btn-outline w-full gap-2 mt-2"
          type="button"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="currentColor"
            aria-hidden="true"
            ><path
              d="M12 0a12 12 0 0 0-3.79 23.39c.6.11.82-.26.82-.58v-2.02c-3.34.73-4.04-1.61-4.04-1.61-.55-1.38-1.34-1.75-1.34-1.75-1.09-.75.08-.73.08-.73 1.2.08 1.83 1.24 1.83 1.24 1.07 1.83 2.8 1.3 3.49.99.11-.78.42-1.3.76-1.6-2.66-.3-5.46-1.33-5.46-5.9 0-1.3.47-2.37 1.24-3.21-.12-.3-.54-1.52.12-3.17 0 0 1-.32 3.3 1.23a11.5 11.5 0 0 1 6 0c2.3-1.55 3.3-1.23 3.3-1.23.66 1.65.24 2.87.12 3.17.77.84 1.24 1.91 1.24 3.21 0 4.58-2.8 5.6-5.48 5.9.43.37.81 1.1.81 2.22v3.29c0 .32.21.7.82.58A12 12 0 0 0 12 0z"
            ></path></svg
          >
          Se connecter avec GitHub
        </button>
        <div class="text-center">
          <p class="text-base-content/70">
            {ui[locale].signup.noAccount}
            <a href="/signup" class="link link-primary">
              {ui[locale].signup.signupLink}
            </a>
          </p>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  //@ts-nocheck
  // On retire toute ancienne information utilisateur du stockage local
  localStorage.removeItem("user");
  const form = document.getElementById("login-form");
  const status = document.getElementById("status");

  // Gestion de la soumission du formulaire
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);

    // Désactiver le bouton pendant la requête
    const submitButton = form.querySelector('button[type="submit"]');
    submitButton.disabled = true;
    submitButton.innerHTML =
      '<span class="loading loading-spinner loading-sm"></span> Connexion...';
    status.textContent = "";

    try {
      const res = await fetch("/api/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          email: formData.get("email"),
          password: formData.get("password"),
        }),
        credentials: "include",
      });

      const resData = await res.json();

      if (res.ok && resData.success) {
        localStorage.setItem("user", JSON.stringify(resData.user));
        status.textContent = "✓ Connexion réussie !";
        status.className = "mt-4 text-center text-success";
        setTimeout(() => {
          window.location.href = "/";
        }, 500);
      } else {
        status.textContent =
          resData.message || resData.error || "Email ou mot de passe invalide";
        status.className = "mt-4 text-center text-error";
        submitButton.disabled = false;
        submitButton.innerHTML = "Se connecter";
      }
    } catch (error) {
      console.error("Erreur de connexion:", error);
      status.textContent =
        "Erreur de connexion au serveur. Veuillez réessayer.";
      status.className = "mt-4 text-center text-error";
      submitButton.disabled = false;
      submitButton.innerHTML = "Se connecter";
    }
  });
</script>
<script type="module" src="/src/pages/login-google.client.js"></script>
<script type="module" src="/src/pages/login-github.client.js"></script>
