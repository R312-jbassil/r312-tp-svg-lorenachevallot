---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <div class="space-y-6 p-6">
    <!-- Partie haute : SVG + mockup -->
    <div class="grid lg:grid-cols-2 gap-6">
      <!-- Conteneur SVG -->
      <div
        id="svg-container"
        class="border border-base-300 rounded-box h-[80dvh] flex items-center justify-center"
      >
        <p class="text-base-content/70">Aucun SVG pour l'instant</p>
      </div>

      <!-- Mockup code -->
      <div class="mockup-window border border-base-300 h-[80dvh]">
        <div class="border-t border-base-300 h-80 overflow-auto p-4">
          <pre
            id="svg-output"
            class="whitespace-pre-wrap">
            <code>Ici apparaitra le code...</code>
          </pre>
        </div>
      </div>
    </div>

    <!-- Partie basse : input + bouton -->
    <div class="join w-full items-center">
      <input
        id="user-prompt"
        type="text"
        placeholder="Décrivez le SVG à générer..."
        class="input input-bordered join-item w-full"
      />
      <button id="generate-button" class="btn btn-primary join-item"
        >Generate</button
      >
      <button class="btn btn-secondary m-2" id="edit-button">Edit</button>
    </div>
  </div>
</Layout>

<script>
  //@ts-nocheck
  let promptList = [];
  async function generateSVG(prompt) {
    const res = await fetch("/api/generateSVG", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(prompt),
    });
    const data = await res.json();
    return data.svg;
  }
  const editButton = document.getElementById("edit-button");

  async function handleEdit() {
    let prompt = "";
    let aiResponse = "";
    const promptElement = document.getElementById("user-prompt");
    prompt = promptElement ? promptElement.value : "";
    console.log("Prompt soumis : ", prompt);
    // Ajout du prompt de l'utilisateur à la liste
    promptList.push({ role: "user", content: prompt });
    const svgContainer = document.getElementById("svg-container");
    // Afficher un spinner de chargement
    svgContainer.innerHTML += `<span class="loading loading-ring loading-xl"></span>`;
    generateButton.disabled = true;
    editButton.disabled = true;
    let svgOutput = document.getElementById("svg-output");
    // Appeler la fonction pour générer le SVG
    aiResponse = await generateSVG(promptList);
    // Extraire le SVG de la réponse
    const svgMatch = aiResponse.content.match(/<svg[\s\S]*?<\/svg>/i);
    aiResponse.content = svgMatch ? svgMatch[0] : "";
    console.log("Code SVG généré : ", aiResponse.content);
    // Ajouter la réponse de l'IA à la liste des prompts
    promptList.push(aiResponse);
    // Afficher le SVG généré
    svgOutput.textContent = aiResponse.content;
    svgContainer.innerHTML = aiResponse.content;
    // Réactiver les boutons
    generateButton.disabled = false;
    editButton.disabled = false;
    console.log("Historique des prompts : ", promptList);
  }

  if (editButton) {
    editButton.addEventListener("click", handleEdit);
  }
  async function handleSubmit() {
    let prompt = "";
    let aiResponse = "";
    const promptElement = document.getElementById("user-prompt");
    prompt = promptElement ? promptElement.value : "";
    console.log("submitted: ", prompt);
    // Réinitialiser la liste des prompts
    promptList.length = 0;
    promptList.push({ role: "user", content: prompt });
    const svgContainer = document.getElementById("svg-container");
    // Afficher un spinner
    svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
    generateButton.disabled = true;
    editButton.disabled = true;
    let svgOutput = document.getElementById("svg-output");
    // Appeler la fonction pour générer le SVG
    aiResponse = await generateSVG(promptList);
    // Extraire le SVG de la réponse
    const svgMatch = aiResponse.content.match(/<svg[\s\S]*?<\/svg>/i);
    aiResponse.content = svgMatch ? svgMatch[0] : "";
    console.log("svgCode: ", aiResponse.content);
    // Ajouter la réponse de l'IA à la liste des prompts
    promptList.push(aiResponse);
    // Afficher le SVG généré
    svgOutput.textContent = aiResponse.content;
    svgContainer.innerHTML = aiResponse.content;
    // Réactiver les boutons
    generateButton.disabled = false;
    editButton.disabled = false;
  }

  const generateButton = document.getElementById("generate-button");
  if (generateButton) {
    generateButton.addEventListener("click", handleSubmit);
  }
</script>
