---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <div class="space-y-6 p-6">
    <!-- Partie haute : SVG + mockup -->
    <div class="grid lg:grid-cols-2 gap-6">
      <!-- Conteneur SVG -->
      <div
        id="svg-container"
        class="border border-base-300 rounded-box h-[80dvh] flex items-center justify-center"
      >
        <p class="text-base-content/70">Aucun SVG pour l'instant</p>
      </div>

      <!-- Mockup code -->
      <div class="mockup-window border border-base-300 h-[80dvh]">
        <div class="border-t border-base-300 h-80 overflow-auto p-4">
          <pre
            id="svg-output"
            class="whitespace-pre-wrap">
            <code>Ici apparaitra le code...</code>
          </pre>
        </div>
      </div>
    </div>

    <!-- Partie basse : input + bouton -->
    <div class="join w-full">
      <input
        id="user-prompt"
        type="text"
        placeholder="Décrivez le SVG à générer..."
        class="input input-bordered join-item w-full"
      />
      <button id="generate-button" class="btn btn-primary join-item"
        >Generate</button
      >
    </div>
  </div>
</Layout>

<script>
  //@ts-nocheck

  async function generateSVG(prompt) {
    const res = await fetch("/api/generateSVG", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ prompt }),
    });
    const data = await res.json();
    return data.svg;
  }

  async function handleSubmit() {
    const promptElement = document.getElementById("user-prompt");
    const svgContainer = document.getElementById("svg-container");
    const svgOutput = document.getElementById("svg-output");
    const generateButton = document.getElementById("generate-button");

    if (!promptElement || !svgContainer || !svgOutput || !generateButton)
      return;

    generateButton.disabled = true;
    const prompt = promptElement.value;

    svgContainer.innerHTML =
      '<span class="loading loading-ring loading-lg text-primary"></span>';

    try {
      const svgCode = await generateSVG(prompt);
      svgOutput.textContent = svgCode;
      svgContainer.innerHTML = svgCode;
    } catch (err) {
      svgOutput.textContent = "Erreur lors de la génération du SVG.";
      svgContainer.innerHTML =
        "<p class='text-error'>Erreur de génération.</p>";
    }

    generateButton.disabled = false;
  }

  const generateButton = document.getElementById("generate-button");
  if (generateButton) {
    generateButton.addEventListener("click", handleSubmit);
  }
</script>
